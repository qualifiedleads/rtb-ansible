"""
Django settings for importer project.

Generated by 'django-admin startproject' using Django 1.8.9.

For more information on this file, see
https://docs.djangoproject.com/en/1.8/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.8/ref/settings/
"""

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
import os, datetime

BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.8/howto/deployment/checklist/

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []

# Application definition

INSTALLED_APPS = (
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    'corsheaders',
    'rest_framework',
    'rest_framework_docs',
    'rest_framework.authtoken',
    'django_crontab',
    'rtb',
)

MIDDLEWARE_CLASSES = (
    'django.contrib.sessions.middleware.SessionMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.auth.middleware.SessionAuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django.middleware.security.SecurityMiddleware',
)

CORS_ORIGIN_ALLOW_ALL = True

ROOT_URLCONF = 'config.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'config.wsgi.application'

# Internationalization
# https://docs.djangoproject.com/en/1.8/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.9/howto/static-files/
STATICFILES_FINDERS = (
    'django.contrib.staticfiles.finders.AppDirectoriesFinder',
    'django.contrib.staticfiles.finders.FileSystemFinder',
    #'django.contrib.staticfiles.finders.DefaultStorageFinder',
)

STATICFILES_DIRS = [
    os.path.join(BASE_DIR, "client", "dist"),
]

STATIC_URL = '/client/'
STATIC_ROOT = os.path.join(BASE_DIR, "static")
MEDIA_URL = '/media/'

# Django Rest Framework Additional Settings
REST_FRAMEWORK = {
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.LimitOffsetPagination',
    'DEFAULT_PERMISSION_CLASSES': [
        #'rest_framework.permissions.DjangoModelPermissionsOrAnonReadOnly',
        'rest_framework.permissions.IsAuthenticatedOrReadOnly'
    ],
    'DEFAULT_AUTHENTICATION_CLASSES': (
        # 'rest_framework.authentication.BasicAuthentication',
        'rest_framework.authentication.SessionAuthentication',
        'rest_framework.authentication.TokenAuthentication',
    )
}
# Periodic jobs
CRONJOBS = [
    ('* * * * *', 'rtb.crons.placement_state_cron.change_state_placement_by_cron_settings'),
    ('0 */1 * * *', 'rtb.crons.campaign_rules_cron.checkRulesByCron'),
    ('*/15 * * * *', 'rtb.crons.placement_state_cron.platform_placement_targets'),
    ('* * * * *', 'rtb.crons.placement_state_cron.suspend_state_middleware_cron'),
    ('0 */4 * * *', 'rtb.crons.imp_tracker_cron.get'),
    ('5 0 * * *', 'rtb.cron.dayly_task'),
    ('0 */1 * * *', 'rtb.crons.ml_predict_new_placements_cron.mlPredictNewPlacementsCron'),
    ('0 6 * * 7', 'rtb.crons.ml_refresh_view_full_placements_data_cron.mlRefreshViewFullPlacementsDataCron')
]

CACHES={
    'default':{
        'BACKEND':'django.core.cache.backends.db.DatabaseCache',
        'LOCATION':'rtb_cache_table',
        'TIMEOUT':3600,
        'OPTIONS':{
            'MAX_ENTRIES':10240,
            'CULL_FREQUENCY':4,
        },
    }
}

INVALIDATE_TIME = datetime.timedelta(hours=23,minutes=30)
MAX_REPORT_WAIT = datetime.timedelta(hours=1)
USE_TRANSACTIONS = False
APPNEXUS_URL = 'https://api.appnexus.com/'

# path to dir when log files must saved
LOG_DIR=os.path.join(BASE_DIR, 'rtb', 'logs')
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'handlers': {
        'file': {
            'level': 'NOTSET',
            'class': 'logging.FileHandler',
            'filename': os.path.join(LOG_DIR, 'cron.log')
            },
        },
    'loggers': {
        'django_crontab': {
            'handlers': ['file'],
            'level': 'NOTSET',
            'propagate': True,
        },
    },
}

SILENCED_SYSTEM_CHECKS = [
    'fields.W342',
]